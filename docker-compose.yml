services:
  postgres:
    container_name: postgres-db
    image: postgres:13.12-alpine3.18
    restart: always
    ports:
      - ${DB_PORT}:${DB_PORT}
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
      PGPORT: ${DB_PORT}
    healthcheck:
      test: pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB
      interval: 1s
    volumes:
    - pgdata:/var/lib/postgresql/data

  app:
    network_mode: host
    container_name: data-governance
    build:
      context: .
      dockerfile: Dockerfile.app
      args:
        - DEV=true
    command: python manage.py runserver 127.0.0.1:8000
    develop:
      watch:
        - action: sync+restart
          path: ./casbin_middleware
          target: /src/casbin_middleware
        - action: rebuild
          path: requirements.txt
        - action: rebuild
          path: requirements-dev.txt
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
    # make sure your app migration files are synced to host
    # this is required incase you ran makemigrations from within container shell
    volumes:
    - ./entity/migrations:/src/entity/migrations

volumes:
  pgdata: